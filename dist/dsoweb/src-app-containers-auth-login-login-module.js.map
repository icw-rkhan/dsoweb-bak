{"version":3,"sources":["webpack:///./node_modules/rxjs-compat/_esm5/add/operator/switchMap.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/switchMap.js","webpack:///./src/app/containers/auth/login/login.component.html","webpack:///./src/app/containers/auth/login/login.component.ts","webpack:///./src/app/containers/auth/login/login.module.ts"],"names":[],"mappings":"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","file":"src-app-containers-auth-login-login-module.js","sourcesContent":["import { Observable } from 'rxjs';\nimport { switchMap } from '../../operator/switchMap';\nObservable.prototype.switchMap = switchMap;\n//# sourceMappingURL=switchMap.js.map","import { switchMap as higherOrderSwitchMap } from 'rxjs/operators';\nexport function switchMap(project) {\n    return higherOrderSwitchMap(project)(this);\n}\n//# sourceMappingURL=switchMap.js.map","module.exports = \"<nav *ngIf=\\\"!checkIsStudent\\\" class=\\\"main-nav\\\">\\n  <div class=\\\"container main-nav-fix\\\">\\n    <div class=\\\"main-nav-wrap-icon\\\">\\n      <a [routerLink]=\\\"['/auth', 'welcome']\\\" href=\\\"javascript:void(0);\\\">\\n        <p class=\\\"main-nav-icon-back\\\"></p>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n<section #loginContainer class=\\\"login\\\">\\n  <div *ngIf=\\\"!checkIsStudent; else isStudentOrNot\\\" class=\\\"login-overlay-primary\\\">\\n    <div class=\\\"logoBox\\\">\\n      <div class=\\\"logo\\\"></div>\\n    </div>\\n    <div #loginContent1 class=\\\"login-content\\\">\\n      <div class=\\\"container\\\">\\n        <h2 class=\\\"form-title\\\">Log In</h2>\\n        <form [formGroup]=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <input formControlName=\\\"username\\\" class=\\\"form-control\\\" type=\\\"email\\\" placeholder=\\\"Email address\\\"\\n                  autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"off\\\"/>\\n            <div *ngIf=\\\"username.invalid && (username.dirty || username.touched)\\\">\\n              <div class=\\\"invalid-input\\\" *ngIf=\\\"username.errors.required\\\">The email can't be blank.</div>\\n              <div class=\\\"invalid-input\\\" *ngIf=\\\"username.errors.email\\\">Please input correct email format.</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group withActionRight\\\">\\n            <input [type]=\\\"isShowPassword ? 'text' : 'password'\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\"\\n               placeholder=\\\"Password\\\" />\\n            <a (click)=\\\"isShowPassword = !isShowPassword\\\" class=\\\"action\\\">{{isShowPassword ? 'Hide' : 'Show'}}</a>\\n            <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\">\\n              <div class=\\\"invalid-input\\\" *ngIf=\\\"password.errors.required\\\">The password can't be blank.</div>\\n            </div>\\n          </div>\\n        </form>\\n        <div class=\\\"form-btn\\\">\\n          <a [routerLink]=\\\"['/auth', 'forgot-password']\\\"><p>Forgot password</p></a>\\n        </div>\\n        <div class=\\\"loginActions\\\">\\n          <button [disabled]=\\\"false\\\"\\n                  (click)=\\\"submit()\\\"\\n                  class=\\\"btn btn-primary btn-full margin-10\\\"\\n                  type=\\\"button\\\">Log In</button>\\n          <div *ngIf=\\\"is_student\\\" class=\\\"btn btn-linkedin-icon btn-full\\\">\\n            <button class=\\\"btn btn-linkedin btn-full\\\" type=\\\"button\\\" (click)=\\\"onLoginLinkedIn()\\\" *ngIf=\\\"!(isUserAuthenticated | async)\\\">\\n              Login with LinkedIn\\n            </button>\\n            <!--<button class=\\\"btn btn-linkedin btn-full\\\" type=\\\"button\\\" (click)=\\\"logoutLinkedIn()\\\" *ngIf=\\\"isUserAuthenticated | async\\\">\\n              Logout from LinkedIn\\n            </button>-->\\n          </div>\\n        </div>\\n        <div class=\\\"textCenter\\\">\\n          <a [routerLink]=\\\"\\\" class=\\\"link underline\\\" (click)=\\\"signUp()\\\">Create an account</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <ng-template #isStudentOrNot>\\n    <div class=\\\"login-overlay-primary\\\">\\n      <div class=\\\"logoBox\\\">\\n        <div class=\\\"logo\\\"></div>\\n      </div>\\n      <div #loginContent2 class=\\\"login-content\\\">\\n        <div class=\\\"container\\\">\\n          <h2 class=\\\"login-title2\\\">Are you a student?</h2>\\n          <p class=\\\"login-detail\\\">We use this information to show personalized content that is relevant to you.</p>\\n          <div class=\\\"margin-20\\\">\\n            <button (click)=\\\"redirect('0')\\\" class=\\\"btn btn-default btn-full margin-10\\\" type=\\\"button\\\">\\n              Yes\\n            </button>\\n            <button (click)=\\\"redirect('1')\\\" class=\\\"btn btn-default btn-full\\\" type=\\\"button\\\">\\n              No\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-template>\\n</section>\\n\\n\"","import { Component, OnInit, ViewChild, ElementRef, HostListener, AfterViewInit, OnChanges } from '@angular/core';\nimport { Router, Params, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CustomValidators } from 'ngx-custom-validators';\n\nimport { SharingService } from '../../../services/sharing.service';\nimport { ApiErrorService, AuthService } from '../../../services';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/switchMap';\nimport { environment } from '../../../../environments/environment';\nimport { metaTagsOperators } from '@ngx-share/core';\n\n@Component({\n  selector: 'dso-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n  device: string;\n  checkIsStudent: boolean;\n  isShowPassword: boolean;\n  is_student: any;\n  form: FormGroup;\n  isUserAuthenticated: Observable<boolean>;\n  isInitialized: Observable<boolean>;\n  isUserAuthenticatedEmittedValue: boolean;\n  isInitializedEmittedValue: boolean;\n\n  @ViewChild('loginContent1') loginContent1: ElementRef;\n  @ViewChild('loginContent2') loginContent2: ElementRef;\n  @ViewChild('loginContainer') loginContainer: ElementRef;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private apiError: ApiErrorService,\n    private sharingService: SharingService,\n    private activatedRoute: ActivatedRoute) {\n    this.sharingService.showLoading(true);\n    this.isShowPassword = false;\n    this.checkIsStudent = false;\n  }\n\n  ngOnInit() {\n    this.sharingService.showLoading(true);\n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      const code = params['code'];  // login with linkedin\n      if (code && code !== '') {\n        this.getAccessToken(code);\n      } else {\n        setTimeout(() => {\n          this.sharingService.showLoading(false);\n        });\n      }\n    });\n    this.initForm();\n    this.is_student = +localStorage.getItem('is_student');\n  }\n\n  ngAfterViewInit() {\n    this.device = this.sharingService.getMyDevice();\n    if (this.device === 'desktop') {\n      const element = this.loginContent1.nativeElement;\n      element.style.maxWidth = environment.fixedWidth;\n    }\n  }\n\n  get username() {\n    return this.form.get('username');\n  }\n\n  get password() {\n    return this.form.get('password');\n  }\n\n  initForm() {\n    this.form = this.fb.group({\n      username: ['', Validators.compose([\n        Validators.required,\n        CustomValidators.email\n      ])],\n      password: ['', Validators.compose([\n        Validators.required\n      ])]\n    });\n  }\n\n  submit() {\n    this.sharingService.showLoading(true);\n    this.form.value.username = this.form.value.username.toLowerCase();\n    const subLogin = this.authService.login(this.form.value).subscribe(\n      (data: any) => {\n        this.sharingService.showLoading(false);\n        if (!data.code) {\n          this.authService.loginSuccess(data);\n          subLogin.unsubscribe();\n\n          this.router.navigate(['/posts']);\n        } else {\n          this.apiError.checkError(data.code, this.form.value, 'login');\n\n          subLogin.unsubscribe();\n        }\n      },\n      err => {\n        this.sharingService.showLoading(false);\n        subLogin.unsubscribe();\n      }\n    );\n  }\n\n  onLoginLinkedIn() {\n    const redirectUri = `${document.location.origin}/auth/login`;\n    const url = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=` +\n    `${environment.linkedinClientId}&redirect_uri=${redirectUri}&state=1234567`;\n    window.location.href = url;\n  }\n\n  private getAccessToken(code: string) {\n    const linkedinLogin = this.authService.requestAccessToken({code: code,\n      redirectUrl: `${document.location.origin}/auth/login`})\n      .subscribe((data: any) => {\n        this.sharingService.showLoading(false);\n        if (!data.code) {\n          this.authService.linkedInLoginSuccess(data);\n          linkedinLogin.unsubscribe();\n\n          this.router.navigate(['/posts']);\n        } else {\n          // this.apiError.checkError(data.code, this.form.value, 'login');\n\n          linkedinLogin.unsubscribe();\n        }\n      });\n  }\n\n  signUp() {\n    this.checkIsStudent = true;\n\n    setTimeout(() => {\n      if (this.device === 'desktop') {\n        const element = this.loginContent2.nativeElement;\n        element.style.maxWidth = environment.fixedWidth;\n      }\n    }, 0);\n  }\n\n  redirect(is_student: string) {\n    localStorage.setItem('is_student', is_student);\n    this.router.navigate(['/auth', 'register']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SharedModule } from '../../../shared';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    LoginComponent\n  ],\n})\nexport class LoginModule { }\n"],"sourceRoot":""}